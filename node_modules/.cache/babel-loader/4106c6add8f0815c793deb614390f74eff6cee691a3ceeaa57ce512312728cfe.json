{"ast":null,"code":"var _jsxFileName = \"/Users/beastio/Documents/Current Projects/mmu-json-parser/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [parsedData, setParsedData] = useState([]);\n  const [isJsonUploaded, setIsJsonUploaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [jobNumber, setJobNumber] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(true);\n  const [copiedIndex, setCopiedIndex] = useState(null); // Track the copied button index\n\n  //Function to toggle dark mode\n  const handleToggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  function formattedConstructionNotes(note) {\n    // Split the note into lines\n    const lines = note.split(\"\\n\");\n\n    // Initialize an array to hold the formatted lines\n    let formattedLines = [];\n\n    // Define the keywords that need special formatting\n    const keywords = [\"RM:\", \"IN:\", \"TX:\"];\n    let currentKeyword = \"\";\n    let addSpacing = false; // To control when to add spacing\n\n    // Loop through each line and apply formatting\n    for (let i = 0; i < lines.length; i++) {\n      let trimmedLine = lines[i].trim();\n\n      // Check if the line starts with any of the keywords\n      if (keywords.some(keyword => trimmedLine.startsWith(keyword))) {\n        var _lines;\n        currentKeyword = trimmedLine.split(\":\")[0] + \":\"; // Set the current keyword\n        const nextLine = (_lines = lines[i + 1]) === null || _lines === void 0 ? void 0 : _lines.trim(); // Get the next line\n        formattedLines.push(`${currentKeyword} ${nextLine}`);\n\n        // Set addSpacing to true to start adding spaces after this line\n        addSpacing = true;\n\n        // Skip the next line since it's already processed\n        i++;\n      } else if (addSpacing && (currentKeyword === \"RM:\" || currentKeyword === \"TX:\")) {\n        // Add spacing for RM and TX, but stop after the first empty line or special line\n        if (trimmedLine.startsWith(\"*\") || trimmedLine === \"\") {\n          addSpacing = false;\n          formattedLines.push(trimmedLine); // No additional spacing\n        } else {\n          formattedLines.push(\"       \" + trimmedLine); // 7 spaces for RM and TX\n        }\n      } else if (addSpacing && currentKeyword === \"IN:\") {\n        // Add spacing for IN, but stop after the first empty line or special line\n        if (trimmedLine.startsWith(\"*\") || trimmedLine === \"\") {\n          addSpacing = false;\n          formattedLines.push(trimmedLine); // No additional spacing\n        } else {\n          formattedLines.push(\"     \" + trimmedLine); // 5 spaces for IN\n        }\n      } else {\n        formattedLines.push(trimmedLine); // Default line\n      }\n    }\n\n    // Join the formatted lines back together\n    return formattedLines.join(\"\\n\");\n  }\n  const sampleNote = `RM:\n40/5 POLE\nPTP & BULLHORN\n3Ø STL T-HANGER\n1Ø STL T-HANGER\n(4) CO, (9) LA\nTAN NEU\n\nIN:\n50/3 POLE\nPTP18 & BULLHORN\n3Ø FBGL T-HANGER\n1Ø FBGL T-HANGER\n(4) CO, (9) LA\n\nTX:\n600KVAR CAPACITOR BANK\nPET XFMR\nANTENNA\nTAN NEU\n*SPEC: SOE-07.001`;\n  const formattedNote = formattedConstructionNotes(sampleNote);\n  console.log(formattedNote);\n  const handleDrop = (event, setParsedData, setIsJsonUploaded, setErrorMessage, setJobNumber) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file && file.type === \"application/json\") {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const jsonString = e.target.result;\n          const json = JSON.parse(jsonString);\n          const jobNumber = json.name || \"Default Job Name\";\n          setJobNumber(jobNumber);\n          const isNodeStructure = !!json.nodes;\n          const isConnectionStructure = !!json.connections;\n          const data = [];\n          const errors = [];\n          if (isNodeStructure) {\n            const nodes = json.nodes;\n            Object.keys(nodes).forEach(nodeId => {\n              const node = nodes[nodeId];\n              const attributes = node.attributes;\n              try {\n                var _attributes$node_type, _attributes$node_type2, _attributes$node_type3, _attributes$pole_owne, _attributes$pole_coun, _attributes$pole_tag, _attributes$pole_tag$, _Object$values$, _attributes$proposed_, _attributes$proposed_2;\n                const nodeType = (attributes === null || attributes === void 0 ? void 0 : (_attributes$node_type = attributes.node_type) === null || _attributes$node_type === void 0 ? void 0 : _attributes$node_type[\"-Imported\"]) || (attributes === null || attributes === void 0 ? void 0 : (_attributes$node_type2 = attributes.node_type) === null || _attributes$node_type2 === void 0 ? void 0 : _attributes$node_type2[\"multi_added\"]) || (attributes === null || attributes === void 0 ? void 0 : (_attributes$node_type3 = attributes.node_type) === null || _attributes$node_type3 === void 0 ? void 0 : _attributes$node_type3[\"button_added\"]) || Object.values(attributes.node_type)[0] || \"N/A\";\n                if (nodeType !== \"pole\") return;\n                const poleOwner = Object.values(attributes.pole_owner)[0] || (attributes === null || attributes === void 0 ? void 0 : (_attributes$pole_owne = attributes.pole_owner) === null || _attributes$pole_owne === void 0 ? void 0 : _attributes$pole_owne[\"-Imported\"]) || \"N/A\";\n                const poleCount = (attributes === null || attributes === void 0 ? void 0 : (_attributes$pole_coun = attributes.pole_count) === null || _attributes$pole_coun === void 0 ? void 0 : _attributes$pole_coun[\"-Imported\"]) || Object.values(attributes.pole_count)[0] || \"error with data\";\n                const poleTag = (attributes === null || attributes === void 0 ? void 0 : (_attributes$pole_tag = attributes.pole_tag) === null || _attributes$pole_tag === void 0 ? void 0 : (_attributes$pole_tag$ = _attributes$pole_tag[\"-Imported\"]) === null || _attributes$pole_tag$ === void 0 ? void 0 : _attributes$pole_tag$.tagtext) || ((_Object$values$ = Object.values(attributes.pole_tag)[0]) === null || _Object$values$ === void 0 ? void 0 : _Object$values$.tagtext) || \"N/A\";\n                const constructionNotes = Object.values((attributes === null || attributes === void 0 ? void 0 : attributes.construction_notes) || {}).filter(note => note.attacher === \"Alabama Power\").map(note => note.note).join(\", \") || \"NO APC WORK\";\n                const constructionNotesFormatted = formattedConstructionNotes(constructionNotes);\n                const proposedPoleSpec = (attributes === null || attributes === void 0 ? void 0 : (_attributes$proposed_ = attributes.proposed_pole_spec) === null || _attributes$proposed_ === void 0 ? void 0 : _attributes$proposed_[\"button_added\"]) || (attributes === null || attributes === void 0 ? void 0 : (_attributes$proposed_2 = attributes.proposed_pole_spec) === null || _attributes$proposed_2 === void 0 ? void 0 : _attributes$proposed_2[\"-Imported\"]) || \"N/A\";\n                // const proposedPoleSize =\n                // proposedPoleSpec.trim().split(\" \")[0].replace(\"-\", \"/\") || \"N/A\";\n\n                const poleLatLong = (node === null || node === void 0 ? void 0 : node.latitude) + \", \" + node.longitude || Object.values(node === null || node === void 0 ? void 0 : node.latitude)[0] + \", \" + Object.values(node.longitude)[0] || \"N/A\";\n                const keyword = \"NESC\";\n                const poleJuCompanies = Object.values((attributes === null || attributes === void 0 ? void 0 : attributes.construction_notes) || {}).filter(note => {\n                  var _note$note;\n                  return (_note$note = note.note) === null || _note$note === void 0 ? void 0 : _note$note.toLowerCase().includes(keyword.toLowerCase());\n                }).map(note => note.attacher === \"\" ? \"Missing JU transfer company\" : note.attacher).filter(company => company) || \"N/A\";\n\n                //   const njunsData =\n                //  \"RPL \" + poleCount + \" station \" + poleTag + \" \" + poleLatLong + \" \" + proposedPoleSize +\n                //    \"county \" + \"cross street \" + \"city\" + \" \" + poleJuCompanies + \" \" + poleOwner;\n\n                // console.log(njunsData);\n                data.push({\n                  id: nodeId,\n                  type: nodeType,\n                  poleOwner,\n                  poleCount,\n                  poleTag,\n                  constructionNotes,\n                  proposedPoleSpec,\n                  poleLatLong,\n                  poleJuCompanies,\n                  constructionNotesFormatted\n                  // njunsData\n                });\n              } catch (error) {\n                errors.push(`Issue with attributes for node ID: ${nodeId}`);\n                console.error(`Error processing node ID ${nodeId}:`, error);\n              }\n            });\n          } else if (isConnectionStructure) {\n            const connections = json.connections;\n            Object.keys(connections).forEach(connectionId => {\n              const connection = connections[connectionId];\n              const attributes = connection.attributes;\n              try {\n                var _attributes$connectio, _attributes$pole_coun2, _attributes$pole_tag2, _attributes$pole_tag3;\n                const connectionType = (attributes === null || attributes === void 0 ? void 0 : (_attributes$connectio = attributes.connection_type) === null || _attributes$connectio === void 0 ? void 0 : _attributes$connectio[\"button_added\"]) || \"N/A\";\n                if (connectionType !== \"aerial cable\") return;\n                const poleCount = (attributes === null || attributes === void 0 ? void 0 : (_attributes$pole_coun2 = attributes.pole_count) === null || _attributes$pole_coun2 === void 0 ? void 0 : _attributes$pole_coun2[\"-Imported\"]) || Object.values(attributes.pole_count)[0] || \"error with data\";\n                const poleTag = (attributes === null || attributes === void 0 ? void 0 : (_attributes$pole_tag2 = attributes.pole_tag) === null || _attributes$pole_tag2 === void 0 ? void 0 : (_attributes$pole_tag3 = _attributes$pole_tag2[\"-Imported\"]) === null || _attributes$pole_tag3 === void 0 ? void 0 : _attributes$pole_tag3.tagtext) || \"N/A\";\n                const constructionNotes = Object.values((attributes === null || attributes === void 0 ? void 0 : attributes.construction_notes) || {}).filter(note => note.attacher === \"Alabama Power\").map(note => note.note).join(\", \") || \"N/A\";\n                data.push({\n                  id: connectionId,\n                  type: connectionType,\n                  poleCount,\n                  poleTag,\n                  constructionNotes\n                });\n              } catch (error) {\n                errors.push(`Issue with attributes for connection ID: ${connectionId}`);\n                console.error(`Error processing connection ID ${connectionId}:`, error);\n              }\n            });\n          } else {\n            setErrorMessage(\"Unrecognized JSON structure\");\n          }\n\n          // Sort the data by pole count, including handling decimal values\n          data.sort((a, b) => {\n            const poleCountA = parseFloat(a.poleCount) || 0;\n            const poleCountB = parseFloat(b.poleCount) || 0;\n            return poleCountA - poleCountB;\n          });\n          setParsedData(data);\n          setErrorMessage(errors.join(\" | \"));\n          setIsJsonUploaded(true);\n        } catch (error) {\n          console.error(\"Error parsing JSON\", error);\n          setErrorMessage(\"Error parsing JSON file.\");\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n  const handleCopy = (text, index) => {\n    navigator.clipboard.writeText(text);\n    setCopiedIndex(index); // Set the index of the copied button\n\n    // Reset the copied text after 1.5 seconds\n    setTimeout(() => {\n      setCopiedIndex(null);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `min-h-screen flex flex-col ${darkMode ? \"bg-custom-gray text-white\" : \"bg-gray-100 text-gray-900\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: `py-4 px-8 shadow-md flex justify-between items-center ${darkMode ? \"bg-custom-gray\" : \"bg-blue-600 text-white\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold\",\n          children: \"MMU JSON Parser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold text-xs\",\n          children: \"by Chris Stewart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [jobNumber && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mt-2 mr-6\",\n          children: [\"Job Number: \", jobNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleDarkMode,\n          className: `py-2 px-4 rounded ${darkMode ? \"bg-gray-700\" : \"bg-gray-200 text-gray-900\"} focus:outline-none`,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: darkMode ? faSun : faMoon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `flex-grow p-8 ${darkMode ? \"bg-custom-dark\" : \"bg-gray-100\"}`,\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 p-4 border rounded ${darkMode ? \"bg-gray-700 border-gray-600 text-red-300\" : \"bg-red-100 text-red-700 border-red-400\"}`,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), isJsonUploaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${darkMode ? \"text-gray-50\" : \"text-gray-800\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Job Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rounded p-4 ${darkMode ? \"bg-custom-dark\" : \"bg-white border border-gray-300\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid gap-4\",\n            children: parsedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-2 rounded ${darkMode ? \"bg-custom-light\" : \"bg-gray-50 border-b border-gray-200\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `p-2 rounded ${darkMode ? \"bg-custom-light\" : \"bg-gray-50 border-b border-gray-200\"} grid grid-cols-9 gap-4`,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"col-span-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Loc Number:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 25\n                  }, this), \" \", item.poleCount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"col-span-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Pole Tag:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this), \" \", item.poleTag]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"col-span-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Construction Notes:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 25\n                  }, this), \" \", item.constructionNotesFormatted.split(\"\\n\").map((line, lineIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 31\n                    }, this)]\n                  }, lineIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleCopy(\"LOC: \" + item.poleCount + \" POLE TAG# \" + item.poleTag + \"\\n \\n\" + item.constructionNotesFormatted, index),\n                  className: `col-span-1 py-2 my-auto rounded bg-slate-500 text-white hover:bg-slate-700 focus:outline-none`,\n                  children: copiedIndex === index ? \"Copied!\" : \"Copy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragOver: e => e.preventDefault(),\n        onDrop: e => handleDrop(e, setParsedData, setIsJsonUploaded, setErrorMessage, setJobNumber),\n        className: `w-full h-48 border-4 border-dashed ${darkMode ? \"border-gray-700 bg-custom-light\" : \"border-gray-950 bg-white\"} flex items-center justify-center text-center cursor-pointer hover:border-gray-500 transition duration-300`,\n        children: \"Drop your JSON file here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cVV54X0LwfAqLbp8SyCMXFY5Agg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faSun","faMoon","jsxDEV","_jsxDEV","App","_s","parsedData","setParsedData","isJsonUploaded","setIsJsonUploaded","errorMessage","setErrorMessage","jobNumber","setJobNumber","darkMode","setDarkMode","copiedIndex","setCopiedIndex","handleToggleDarkMode","formattedConstructionNotes","note","lines","split","formattedLines","keywords","currentKeyword","addSpacing","i","length","trimmedLine","trim","some","keyword","startsWith","_lines","nextLine","push","join","sampleNote","formattedNote","console","log","handleDrop","event","preventDefault","file","dataTransfer","files","type","reader","FileReader","onload","e","jsonString","target","result","json","JSON","parse","name","isNodeStructure","nodes","isConnectionStructure","connections","data","errors","Object","keys","forEach","nodeId","node","attributes","_attributes$node_type","_attributes$node_type2","_attributes$node_type3","_attributes$pole_owne","_attributes$pole_coun","_attributes$pole_tag","_attributes$pole_tag$","_Object$values$","_attributes$proposed_","_attributes$proposed_2","nodeType","node_type","values","poleOwner","pole_owner","poleCount","pole_count","poleTag","pole_tag","tagtext","constructionNotes","construction_notes","filter","attacher","map","constructionNotesFormatted","proposedPoleSpec","proposed_pole_spec","poleLatLong","latitude","longitude","poleJuCompanies","_note$note","toLowerCase","includes","company","id","error","connectionId","connection","_attributes$connectio","_attributes$pole_coun2","_attributes$pole_tag2","_attributes$pole_tag3","connectionType","connection_type","sort","a","b","poleCountA","parseFloat","poleCountB","readAsText","handleCopy","text","index","navigator","clipboard","writeText","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","item","line","lineIndex","Fragment","onDragOver","onDrop","_c","$RefreshReg$"],"sources":["/Users/beastio/Documents/Current Projects/mmu-json-parser/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  const [parsedData, setParsedData] = useState([]);\n  const [isJsonUploaded, setIsJsonUploaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [jobNumber, setJobNumber] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(true);\n  const [copiedIndex, setCopiedIndex] = useState(null); // Track the copied button index\n\n  //Function to toggle dark mode\n  const handleToggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  function formattedConstructionNotes(note) {\n    // Split the note into lines\n    const lines = note.split(\"\\n\");\n\n    // Initialize an array to hold the formatted lines\n    let formattedLines = [];\n\n    // Define the keywords that need special formatting\n    const keywords = [\"RM:\", \"IN:\", \"TX:\"];\n\n    let currentKeyword = \"\";\n    let addSpacing = false; // To control when to add spacing\n\n    // Loop through each line and apply formatting\n    for (let i = 0; i < lines.length; i++) {\n      let trimmedLine = lines[i].trim();\n\n      // Check if the line starts with any of the keywords\n      if (keywords.some((keyword) => trimmedLine.startsWith(keyword))) {\n        currentKeyword = trimmedLine.split(\":\")[0] + \":\"; // Set the current keyword\n        const nextLine = lines[i + 1]?.trim(); // Get the next line\n        formattedLines.push(`${currentKeyword} ${nextLine}`);\n\n        // Set addSpacing to true to start adding spaces after this line\n        addSpacing = true;\n\n        // Skip the next line since it's already processed\n        i++;\n      } else if (\n        addSpacing &&\n        (currentKeyword === \"RM:\" || currentKeyword === \"TX:\")\n      ) {\n        // Add spacing for RM and TX, but stop after the first empty line or special line\n        if (trimmedLine.startsWith(\"*\") || trimmedLine === \"\") {\n          addSpacing = false;\n          formattedLines.push(trimmedLine); // No additional spacing\n        } else {\n          formattedLines.push(\"       \" + trimmedLine); // 7 spaces for RM and TX\n        }\n      } else if (addSpacing && currentKeyword === \"IN:\") {\n        // Add spacing for IN, but stop after the first empty line or special line\n        if (trimmedLine.startsWith(\"*\") || trimmedLine === \"\") {\n          addSpacing = false;\n          formattedLines.push(trimmedLine); // No additional spacing\n        } else {\n          formattedLines.push(\"     \" + trimmedLine); // 5 spaces for IN\n        }\n      } else {\n        formattedLines.push(trimmedLine); // Default line\n      }\n    }\n\n    // Join the formatted lines back together\n    return formattedLines.join(\"\\n\");\n  }\n\n  const sampleNote = `RM:\n40/5 POLE\nPTP & BULLHORN\n3Ø STL T-HANGER\n1Ø STL T-HANGER\n(4) CO, (9) LA\nTAN NEU\n\nIN:\n50/3 POLE\nPTP18 & BULLHORN\n3Ø FBGL T-HANGER\n1Ø FBGL T-HANGER\n(4) CO, (9) LA\n\nTX:\n600KVAR CAPACITOR BANK\nPET XFMR\nANTENNA\nTAN NEU\n*SPEC: SOE-07.001`;\n\n  const formattedNote = formattedConstructionNotes(sampleNote);\n  console.log(formattedNote);\n\n\n  const handleDrop = (\n    event,\n    setParsedData,\n    setIsJsonUploaded,\n    setErrorMessage,\n    setJobNumber\n  ) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file && file.type === \"application/json\") {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const jsonString = e.target.result;\n          const json = JSON.parse(jsonString);\n          const jobNumber = json.name || \"Default Job Name\";\n          setJobNumber(jobNumber);\n\n          const isNodeStructure = !!json.nodes;\n          const isConnectionStructure = !!json.connections;\n\n          const data = [];\n          const errors = [];\n\n          if (isNodeStructure) {\n            const nodes = json.nodes;\n            Object.keys(nodes).forEach((nodeId) => {\n              const node = nodes[nodeId];\n              const attributes = node.attributes;\n\n              try {\n                const nodeType =\n                  attributes?.node_type?.[\"-Imported\"] ||\n                  attributes?.node_type?.[\"multi_added\"] ||\n                  attributes?.node_type?.[\"button_added\"] ||\n                  Object.values(attributes.node_type)[0] ||\n                  \"N/A\";\n\n                if (nodeType !== \"pole\") return;\n                const poleOwner =\n                  Object.values(attributes.pole_owner)[0] ||\n                  attributes?.pole_owner?.[\"-Imported\"] ||\n                  \"N/A\";\n\n                const poleCount =\n                  attributes?.pole_count?.[\"-Imported\"] ||\n                  Object.values(attributes.pole_count)[0] ||\n                  \"error with data\";\n                const poleTag =\n                  attributes?.pole_tag?.[\"-Imported\"]?.tagtext ||\n                  Object.values(attributes.pole_tag)[0]?.tagtext ||\n                  \"N/A\";\n                const constructionNotes =\n                  Object.values(attributes?.construction_notes || {})\n                    .filter((note) => note.attacher === \"Alabama Power\")\n                    .map((note) => note.note)\n                    .join(\", \") || \"NO APC WORK\";\n\n                const constructionNotesFormatted =\n                  formattedConstructionNotes(constructionNotes);\n\n                const proposedPoleSpec =\n                  attributes?.proposed_pole_spec?.[\"button_added\"] ||\n                  attributes?.proposed_pole_spec?.[\"-Imported\"] ||\n                  \"N/A\";\n                // const proposedPoleSize =\n                // proposedPoleSpec.trim().split(\" \")[0].replace(\"-\", \"/\") || \"N/A\";\n\n                const poleLatLong =\n                  node?.latitude + \", \" + node.longitude ||\n                  Object.values(node?.latitude)[0] +\n                    \", \" +\n                    Object.values(node.longitude)[0] ||\n                  \"N/A\";\n\n                const keyword = \"NESC\";\n                const poleJuCompanies =\n                  Object.values(attributes?.construction_notes || {})\n                    .filter((note) =>\n                      note.note?.toLowerCase().includes(keyword.toLowerCase())\n                    )\n                    .map((note) =>\n                      note.attacher === \"\"\n                        ? \"Missing JU transfer company\"\n                        : note.attacher\n                    )\n                    .filter((company) => company) || \"N/A\";\n\n                //   const njunsData =\n                //  \"RPL \" + poleCount + \" station \" + poleTag + \" \" + poleLatLong + \" \" + proposedPoleSize +\n                //    \"county \" + \"cross street \" + \"city\" + \" \" + poleJuCompanies + \" \" + poleOwner;\n\n                // console.log(njunsData);\n                data.push({\n                  id: nodeId,\n                  type: nodeType,\n                  poleOwner,\n                  poleCount,\n                  poleTag,\n                  constructionNotes,\n                  proposedPoleSpec,\n                  poleLatLong,\n                  poleJuCompanies,\n                  constructionNotesFormatted,\n                  // njunsData\n                });\n              } catch (error) {\n                errors.push(`Issue with attributes for node ID: ${nodeId}`);\n                console.error(`Error processing node ID ${nodeId}:`, error);\n              }\n            });\n          } else if (isConnectionStructure) {\n            const connections = json.connections;\n            Object.keys(connections).forEach((connectionId) => {\n              const connection = connections[connectionId];\n              const attributes = connection.attributes;\n\n              try {\n                const connectionType =\n                  attributes?.connection_type?.[\"button_added\"] || \"N/A\";\n\n                if (connectionType !== \"aerial cable\") return;\n\n                const poleCount =\n                  attributes?.pole_count?.[\"-Imported\"] ||\n                  Object.values(attributes.pole_count)[0] ||\n                  \"error with data\";\n                const poleTag =\n                  attributes?.pole_tag?.[\"-Imported\"]?.tagtext || \"N/A\";\n                const constructionNotes =\n                  Object.values(attributes?.construction_notes || {})\n                    .filter((note) => note.attacher === \"Alabama Power\")\n                    .map((note) => note.note)\n                    .join(\", \") || \"N/A\";\n\n                data.push({\n                  id: connectionId,\n                  type: connectionType,\n                  poleCount,\n                  poleTag,\n                  constructionNotes,\n                });\n              } catch (error) {\n                errors.push(\n                  `Issue with attributes for connection ID: ${connectionId}`\n                );\n                console.error(\n                  `Error processing connection ID ${connectionId}:`,\n                  error\n                );\n              }\n            });\n          } else {\n            setErrorMessage(\"Unrecognized JSON structure\");\n          }\n\n          // Sort the data by pole count, including handling decimal values\n          data.sort((a, b) => {\n            const poleCountA = parseFloat(a.poleCount) || 0;\n            const poleCountB = parseFloat(b.poleCount) || 0;\n            return poleCountA - poleCountB;\n          });\n\n          setParsedData(data);\n          setErrorMessage(errors.join(\" | \"));\n          setIsJsonUploaded(true);\n        } catch (error) {\n          console.error(\"Error parsing JSON\", error);\n          setErrorMessage(\"Error parsing JSON file.\");\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const handleCopy = (text, index) => {\n    navigator.clipboard.writeText(text);\n    setCopiedIndex(index); // Set the index of the copied button\n\n    // Reset the copied text after 1.5 seconds\n    setTimeout(() => {\n      setCopiedIndex(null);\n    }, 1500);\n  };\n\n  return (\n    <div\n      className={`min-h-screen flex flex-col ${\n        darkMode ? \"bg-custom-gray text-white\" : \"bg-gray-100 text-gray-900\"\n      }`}\n    >\n      {/* Header */}\n      <header\n        className={`py-4 px-8 shadow-md flex justify-between items-center ${\n          darkMode ? \"bg-custom-gray\" : \"bg-blue-600 text-white\"\n        }`}\n      >\n        <div>\n          <h1 className=\"text-xl font-semibold\">MMU JSON Parser</h1>\n          <span className=\"font-semibold text-xs\">by Chris Stewart</span>\n        </div>\n        <div className=\"flex items-center\">\n          {jobNumber && (\n            <h2 className=\"text-lg mt-2 mr-6\">Job Number: {jobNumber}</h2>\n          )}\n          <button\n            onClick={handleToggleDarkMode}\n            className={`py-2 px-4 rounded ${\n              darkMode ? \"bg-gray-700\" : \"bg-gray-200 text-gray-900\"\n            } focus:outline-none`}\n          >\n            <FontAwesomeIcon icon={darkMode ? faSun : faMoon} />\n          </button>\n        </div>\n      </header>\n\n      <main\n        className={`flex-grow p-8 ${\n          darkMode ? \"bg-custom-dark\" : \"bg-gray-100\"\n        }`}\n      >\n        {errorMessage && (\n          <div\n            className={`mb-4 p-4 border rounded ${\n              darkMode\n                ? \"bg-gray-700 border-gray-600 text-red-300\"\n                : \"bg-red-100 text-red-700 border-red-400\"\n            }`}\n          >\n            {errorMessage}\n          </div>\n        )}\n\n        {isJsonUploaded ? (\n          <div className={`${darkMode ? \"text-gray-50\" : \"text-gray-800\"}`}>\n            <h3 className=\"text-lg font-semibold mb-4\">Job Data:</h3>\n            <div\n              className={`rounded p-4 ${\n                darkMode ? \"bg-custom-dark\" : \"bg-white border border-gray-300\"\n              }`}\n            >\n              <div className=\"grid gap-4\">\n                {parsedData.map((item, index) => (\n                  <div\n                    key={index}\n                    className={`p-2 rounded ${\n                      darkMode\n                        ? \"bg-custom-light\"\n                        : \"bg-gray-50 border-b border-gray-200\"\n                    }`}\n                  >\n                    <div\n                      className={`p-2 rounded ${\n                        darkMode\n                          ? \"bg-custom-light\"\n                          : \"bg-gray-50 border-b border-gray-200\"\n                      } grid grid-cols-9 gap-4`}\n                    >\n                      <p className=\"col-span-2\">\n                        <strong>Loc Number:</strong> {item.poleCount}\n                      </p>\n                      <p className=\"col-span-2\">\n                        <strong>Pole Tag:</strong> {item.poleTag}\n                      </p>\n                      <p className=\"col-span-3\">\n                        <strong>Construction Notes:</strong>{\" \"}\n                        {item.constructionNotesFormatted\n                          .split(\"\\n\")\n                          .map((line, lineIndex) => (\n                            <React.Fragment key={lineIndex}>\n                              {line}\n                              <br />\n                            </React.Fragment>\n                          ))}\n                      </p>\n                      <button\n                        onClick={() =>\n                          handleCopy(\n                            \"LOC: \" +\n                              item.poleCount +\n                              \" POLE TAG# \" +\n                              item.poleTag +\n                              \"\\n \\n\" +\n                              item.constructionNotesFormatted,\n                            index\n                          )\n                        }\n                        className={`col-span-1 py-2 my-auto rounded bg-slate-500 text-white hover:bg-slate-700 focus:outline-none`}\n                      >\n                        {copiedIndex === index ? \"Copied!\" : \"Copy\"}\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div\n            onDragOver={(e) => e.preventDefault()}\n            onDrop={(e) =>\n              handleDrop(\n                e,\n                setParsedData,\n                setIsJsonUploaded,\n                setErrorMessage,\n                setJobNumber\n              )\n            }\n            className={`w-full h-48 border-4 border-dashed ${\n              darkMode\n                ? \"border-gray-700 bg-custom-light\"\n                : \"border-gray-950 bg-white\"\n            } flex items-center justify-center text-center cursor-pointer hover:border-gray-500 transition duration-300`}\n          >\n            Drop your JSON file here\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}