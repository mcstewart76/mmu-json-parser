{"ast":null,"code":"import React,{useState}from\"react\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faSun,faMoon}from\"@fortawesome/free-solid-svg-icons\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[parsedData,setParsedData]=useState([]);const[isJsonUploaded,setIsJsonUploaded]=useState(false);const[errorMessage,setErrorMessage]=useState(\"\");const[jobNumber,setJobNumber]=useState(\"\");const[darkMode,setDarkMode]=useState(true);const[copiedIndex,setCopiedIndex]=useState(null);// Track the copied button index\nconst[hideNoWork,setHideNoWork]=useState(true);// State to manage hiding locations with \"NO APC WORK\"\n// Function to toggle dark mode\nconst handleToggleDarkMode=()=>{setDarkMode(!darkMode);};// Function to toggle hiding locations with \"NO APC WORK\"\nconst handleToggleHideNoWork=()=>{setHideNoWork(!hideNoWork);};function formattedConstructionNotes(note){// Split the note into lines\nconst lines=note.split(\"\\n\");// Initialize an array to hold the formatted lines\nlet formattedLines=[];// Define the keywords that need special formatting\nconst keywords=[\"RM:\",\"IN:\",\"TX:\"];let currentKeyword=\"\";let addSpacing=false;// To control when to add spacing\n// Loop through each line and apply formatting\nfor(let i=0;i<lines.length;i++){let trimmedLine=lines[i].trim();// Check if the line starts with any of the keywords\nif(keywords.some(keyword=>trimmedLine.startsWith(keyword))){var _lines;currentKeyword=trimmedLine.split(\":\")[0]+\":\";// Set the current keyword\nconst nextLine=(_lines=lines[i+1])===null||_lines===void 0?void 0:_lines.trim();// Get the next line\nformattedLines.push(`${currentKeyword} ${nextLine}`);// Set addSpacing to true to start adding spaces after this line\naddSpacing=true;// Skip the next line since it's already processed\ni++;}else if(addSpacing&&(currentKeyword===\"RM:\"||currentKeyword===\"TX:\")){// Add spacing for RM and TX, but stop after the first empty line or special line\nif(trimmedLine.startsWith(\"*\")||trimmedLine===\"\"){addSpacing=false;formattedLines.push(trimmedLine);// No additional spacing\n}else{formattedLines.push(\"       \"+trimmedLine);// 7 spaces for RM and TX\n}}else if(addSpacing&&currentKeyword===\"IN:\"){// Add spacing for IN, but stop after the first empty line or special line\nif(trimmedLine.startsWith(\"*\")||trimmedLine===\"\"){addSpacing=false;formattedLines.push(trimmedLine);// No additional spacing\n}else{formattedLines.push(\"     \"+trimmedLine);// 5 spaces for IN\n}}else{formattedLines.push(trimmedLine);// Default line\n}}// Join the formatted lines back together\nlet formattedString=formattedLines.join(\"\\n\");// Trim extra newlines after RM and IN sections\nformattedString=formattedString.replace(/(\\n{2,})/g,\"\\n\");// Ensure a single line break after the TX section but before any spec or following content\nformattedString=formattedString.replace(/(TX:[^\\n]*\\n(?:\\s+.*\\n)*)/g,\"$1\\n\");// Remove unnecessary trailing newlines or spaces, but keep the required one after TX:\nformattedString=formattedString.trimEnd();return formattedString;}const handleDrop=(event,setParsedData,setIsJsonUploaded,setErrorMessage,setJobNumber)=>{event.preventDefault();const file=event.dataTransfer.files[0];if(file&&file.type===\"application/json\"){const reader=new FileReader();reader.onload=e=>{try{const jsonString=e.target.result;const json=JSON.parse(jsonString);const jobNumber=json.name||\"Default Job Name\";setJobNumber(jobNumber);const isNodeStructure=!!json.nodes;const isConnectionStructure=!!json.connections;const data=[];const errors=[];if(isNodeStructure){const nodes=json.nodes;Object.keys(nodes).forEach(nodeId=>{const node=nodes[nodeId];const attributes=node.attributes;try{var _attributes$node_type,_attributes$node_type2,_attributes$node_type3,_attributes$pole_owne,_attributes$pole_coun,_attributes$pole_tag,_attributes$pole_tag$,_Object$values$,_attributes$proposed_,_attributes$proposed_2;const nodeType=(attributes===null||attributes===void 0?void 0:(_attributes$node_type=attributes.node_type)===null||_attributes$node_type===void 0?void 0:_attributes$node_type[\"-Imported\"])||(attributes===null||attributes===void 0?void 0:(_attributes$node_type2=attributes.node_type)===null||_attributes$node_type2===void 0?void 0:_attributes$node_type2[\"multi_added\"])||(attributes===null||attributes===void 0?void 0:(_attributes$node_type3=attributes.node_type)===null||_attributes$node_type3===void 0?void 0:_attributes$node_type3[\"button_added\"])||Object.values(attributes.node_type)[0]||\"N/A\";if(nodeType!==\"pole\")return;const poleOwner=Object.values(attributes.pole_owner)[0]||(attributes===null||attributes===void 0?void 0:(_attributes$pole_owne=attributes.pole_owner)===null||_attributes$pole_owne===void 0?void 0:_attributes$pole_owne[\"-Imported\"])||\"N/A\";const poleCount=(attributes===null||attributes===void 0?void 0:(_attributes$pole_coun=attributes.pole_count)===null||_attributes$pole_coun===void 0?void 0:_attributes$pole_coun[\"-Imported\"])||Object.values(attributes.pole_count)[0]||\"error with data\";const poleTag=(attributes===null||attributes===void 0?void 0:(_attributes$pole_tag=attributes.pole_tag)===null||_attributes$pole_tag===void 0?void 0:(_attributes$pole_tag$=_attributes$pole_tag[\"-Imported\"])===null||_attributes$pole_tag$===void 0?void 0:_attributes$pole_tag$.tagtext)||((_Object$values$=Object.values(attributes.pole_tag)[0])===null||_Object$values$===void 0?void 0:_Object$values$.tagtext)||\"N/A\";const constructionNotes=Object.values((attributes===null||attributes===void 0?void 0:attributes.construction_notes)||{}).filter(note=>note.attacher===\"Alabama Power\").map(note=>note.note).join(\", \")||\"NO APC WORK\";const constructionNotesFormatted=formattedConstructionNotes(constructionNotes);const proposedPoleSpec=(attributes===null||attributes===void 0?void 0:(_attributes$proposed_=attributes.proposed_pole_spec)===null||_attributes$proposed_===void 0?void 0:_attributes$proposed_[\"button_added\"])||(attributes===null||attributes===void 0?void 0:(_attributes$proposed_2=attributes.proposed_pole_spec)===null||_attributes$proposed_2===void 0?void 0:_attributes$proposed_2[\"-Imported\"])||\"N/A\";// const proposedPoleSize =\n// proposedPoleSpec.trim().split(\" \")[0].replace(\"-\", \"/\") || \"N/A\";\nconst poleLatLong=(node===null||node===void 0?void 0:node.latitude)+\", \"+node.longitude||Object.values(node===null||node===void 0?void 0:node.latitude)[0]+\", \"+Object.values(node.longitude)[0]||\"N/A\";const keyword=\"NESC\";const poleJuCompanies=Object.values((attributes===null||attributes===void 0?void 0:attributes.construction_notes)||{}).filter(note=>{var _note$note;return(_note$note=note.note)===null||_note$note===void 0?void 0:_note$note.toLowerCase().includes(keyword.toLowerCase());}).map(note=>note.attacher===\"\"?\"Missing JU transfer company\":note.attacher).filter(company=>company)||\"N/A\";//   const njunsData =\n//  \"RPL \" + poleCount + \" station \" + poleTag + \" \" + poleLatLong + \" \" + proposedPoleSize +\n//    \"county \" + \"cross street \" + \"city\" + \" \" + poleJuCompanies + \" \" + poleOwner;\n// console.log(njunsData);\ndata.push({id:nodeId,type:nodeType,poleOwner,poleCount,poleTag,constructionNotes,proposedPoleSpec,poleLatLong,poleJuCompanies,constructionNotesFormatted// njunsData\n});}catch(error){errors.push(`Issue with attributes for node ID: ${nodeId}`);console.error(`Error processing node ID ${nodeId}:`,error);}});}else if(isConnectionStructure){const connections=json.connections;Object.keys(connections).forEach(connectionId=>{const connection=connections[connectionId];const attributes=connection.attributes;try{var _attributes$connectio,_attributes$pole_coun2,_attributes$pole_tag2,_attributes$pole_tag3;const connectionType=(attributes===null||attributes===void 0?void 0:(_attributes$connectio=attributes.connection_type)===null||_attributes$connectio===void 0?void 0:_attributes$connectio[\"button_added\"])||\"N/A\";if(connectionType!==\"aerial cable\")return;const poleCount=(attributes===null||attributes===void 0?void 0:(_attributes$pole_coun2=attributes.pole_count)===null||_attributes$pole_coun2===void 0?void 0:_attributes$pole_coun2[\"-Imported\"])||Object.values(attributes.pole_count)[0]||\"error with data\";const poleTag=(attributes===null||attributes===void 0?void 0:(_attributes$pole_tag2=attributes.pole_tag)===null||_attributes$pole_tag2===void 0?void 0:(_attributes$pole_tag3=_attributes$pole_tag2[\"-Imported\"])===null||_attributes$pole_tag3===void 0?void 0:_attributes$pole_tag3.tagtext)||\"N/A\";const constructionNotes=Object.values((attributes===null||attributes===void 0?void 0:attributes.construction_notes)||{}).filter(note=>note.attacher===\"Alabama Power\").map(note=>note.note).join(\", \")||\"N/A\";data.push({id:connectionId,type:connectionType,poleCount,poleTag,constructionNotes});}catch(error){errors.push(`Issue with attributes for connection ID: ${connectionId}`);console.error(`Error processing connection ID ${connectionId}:`,error);}});}else{setErrorMessage(\"Unrecognized JSON structure\");}// Sort the data by pole count, including handling decimal values\ndata.sort((a,b)=>{const poleCountA=parseFloat(a.poleCount)||0;const poleCountB=parseFloat(b.poleCount)||0;return poleCountA-poleCountB;});setParsedData(data);setErrorMessage(errors.join(\" | \"));setIsJsonUploaded(true);}catch(error){console.error(\"Error parsing JSON\",error);setErrorMessage(\"Error parsing JSON file.\");}};reader.readAsText(file);}};const handleCopy=(text,index)=>{const capitalizedText=text.toUpperCase();navigator.clipboard.writeText(capitalizedText);setCopiedIndex(index);// Set the index of the copied button\n// Reset the copied text after 1.5 seconds\nsetTimeout(()=>{setCopiedIndex(null);},1500);};return/*#__PURE__*/_jsxs(\"div\",{className:`min-h-screen flex flex-col ${darkMode?\"bg-custom-gray text-white\":\"bg-gray-100 text-gray-900\"}`,children:[/*#__PURE__*/_jsxs(\"header\",{className:`py-4 px-8 shadow-md flex justify-between items-center ${darkMode?\"bg-custom-gray\":\"bg-blue-600 text-white\"}`,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-semibold\",children:\"MMU JSON Parser\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-xs\",children:\"by Chris Stewart\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[jobNumber&&/*#__PURE__*/_jsxs(\"h2\",{className:\"text-lg mt-2 mr-6\",children:[\"Job Number: \",jobNumber]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleToggleDarkMode,className:`py-2 px-4 rounded ${darkMode?\"bg-gray-700\":\"bg-gray-200 text-gray-900\"} focus:outline-none`,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:darkMode?faSun:faMoon})})]})]}),/*#__PURE__*/_jsxs(\"main\",{className:`flex-grow p-8 ${darkMode?\"bg-custom-dark\":\"bg-gray-100\"}`,children:[errorMessage&&/*#__PURE__*/_jsx(\"div\",{className:`mb-4 p-4 border rounded ${darkMode?\"bg-gray-700 border-gray-600 text-red-300\":\"bg-red-100 text-red-700 border-red-400\"}`,children:errorMessage}),isJsonUploaded?/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?\"text-gray-50\":\"text-gray-800\"}`,children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4\",children:\"Job Data:\"}),isJsonUploaded&&/*#__PURE__*/_jsx(\"button\",{onClick:handleToggleHideNoWork,className:`mb-4 py-2 px-4 rounded ${darkMode?\"bg-gray-700\":\"bg-gray-200 text-gray-900\"} focus:outline-none`,children:hideNoWork?\"Show No Work Locations\":\"Hide No Work Locations\"}),/*#__PURE__*/_jsx(\"div\",{className:`rounded p-4 ${darkMode?\"bg-custom-dark\":\"bg-white border border-gray-300\"}`,children:/*#__PURE__*/_jsx(\"div\",{className:\"grid gap-4\",children:parsedData.filter(item=>!hideNoWork||item.constructionNotes!==\"NO APC WORK\").map((item,index)=>/*#__PURE__*/_jsx(\"div\",{className:`p-2 rounded ${darkMode?\"bg-custom-light\":\"bg-gray-50 border-b border-gray-200\"}`,children:/*#__PURE__*/_jsxs(\"div\",{className:`p-2 rounded ${darkMode?\"bg-custom-light\":\"bg-gray-50 border-b border-gray-200\"} grid grid-cols-9 gap-4`,children:[/*#__PURE__*/_jsxs(\"p\",{className:\"col-span-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Loc Number:\"}),\" \",item.poleCount]}),/*#__PURE__*/_jsxs(\"p\",{className:\"col-span-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Pole Tag:\"}),\" \",item.poleTag]}),/*#__PURE__*/_jsxs(\"p\",{className:\"col-span-3\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"APC Directive:\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),item.constructionNotes.split(\"\\n\").map((line,lineIndex)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[line,/*#__PURE__*/_jsx(\"br\",{})]},lineIndex))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-span-2 flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Callouts:\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleCopy(\"LOC \"+item.poleCount+\": POLE TAG# \"+item.poleTag+\"\\n \\n\"+item.constructionNotesFormatted,index),className:`py-2 my-auto px-12 rounded bg-slate-500 text-white hover:bg-slate-700 focus:outline-none`,children:copiedIndex===index?\"Copied!\":\"Copy\"})]})]})},index))})})]}):/*#__PURE__*/_jsx(\"div\",{onDragOver:e=>e.preventDefault(),onDrop:e=>handleDrop(e,setParsedData,setIsJsonUploaded,setErrorMessage,setJobNumber),className:`w-full h-48 border-4 border-dashed ${darkMode?\"border-gray-700 bg-custom-light\":\"border-gray-950 bg-white\"} flex items-center justify-center text-center cursor-pointer hover:border-gray-500 transition duration-300`,children:\"Drop your JSON file here\"})]})]});}export default App;","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faSun","faMoon","jsx","_jsx","jsxs","_jsxs","App","parsedData","setParsedData","isJsonUploaded","setIsJsonUploaded","errorMessage","setErrorMessage","jobNumber","setJobNumber","darkMode","setDarkMode","copiedIndex","setCopiedIndex","hideNoWork","setHideNoWork","handleToggleDarkMode","handleToggleHideNoWork","formattedConstructionNotes","note","lines","split","formattedLines","keywords","currentKeyword","addSpacing","i","length","trimmedLine","trim","some","keyword","startsWith","_lines","nextLine","push","formattedString","join","replace","trimEnd","handleDrop","event","preventDefault","file","dataTransfer","files","type","reader","FileReader","onload","e","jsonString","target","result","json","JSON","parse","name","isNodeStructure","nodes","isConnectionStructure","connections","data","errors","Object","keys","forEach","nodeId","node","attributes","_attributes$node_type","_attributes$node_type2","_attributes$node_type3","_attributes$pole_owne","_attributes$pole_coun","_attributes$pole_tag","_attributes$pole_tag$","_Object$values$","_attributes$proposed_","_attributes$proposed_2","nodeType","node_type","values","poleOwner","pole_owner","poleCount","pole_count","poleTag","pole_tag","tagtext","constructionNotes","construction_notes","filter","attacher","map","constructionNotesFormatted","proposedPoleSpec","proposed_pole_spec","poleLatLong","latitude","longitude","poleJuCompanies","_note$note","toLowerCase","includes","company","id","error","console","connectionId","connection","_attributes$connectio","_attributes$pole_coun2","_attributes$pole_tag2","_attributes$pole_tag3","connectionType","connection_type","sort","a","b","poleCountA","parseFloat","poleCountB","readAsText","handleCopy","text","index","capitalizedText","toUpperCase","navigator","clipboard","writeText","setTimeout","className","children","onClick","icon","item","line","lineIndex","Fragment","onDragOver","onDrop"],"sources":["/Users/beastio/Documents/Current Projects/mmu-json-parser/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  const [parsedData, setParsedData] = useState([]);\n  const [isJsonUploaded, setIsJsonUploaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [jobNumber, setJobNumber] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(true);\n  const [copiedIndex, setCopiedIndex] = useState(null); // Track the copied button index\n  const [hideNoWork, setHideNoWork] = useState(true); // State to manage hiding locations with \"NO APC WORK\"\n\n  // Function to toggle dark mode\n  const handleToggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  // Function to toggle hiding locations with \"NO APC WORK\"\n  const handleToggleHideNoWork = () => {\n    setHideNoWork(!hideNoWork);\n  };\n\nfunction formattedConstructionNotes(note) {\n  // Split the note into lines\n  const lines = note.split(\"\\n\");\n\n  // Initialize an array to hold the formatted lines\n  let formattedLines = [];\n\n  // Define the keywords that need special formatting\n  const keywords = [\"RM:\", \"IN:\", \"TX:\"];\n\n  let currentKeyword = \"\";\n  let addSpacing = false; // To control when to add spacing\n\n  // Loop through each line and apply formatting\n  for (let i = 0; i < lines.length; i++) {\n    let trimmedLine = lines[i].trim();\n\n    // Check if the line starts with any of the keywords\n    if (keywords.some((keyword) => trimmedLine.startsWith(keyword))) {\n      currentKeyword = trimmedLine.split(\":\")[0] + \":\"; // Set the current keyword\n      const nextLine = lines[i + 1]?.trim(); // Get the next line\n      formattedLines.push(`${currentKeyword} ${nextLine}`);\n\n      // Set addSpacing to true to start adding spaces after this line\n      addSpacing = true;\n\n      // Skip the next line since it's already processed\n      i++;\n    } else if (\n      addSpacing &&\n      (currentKeyword === \"RM:\" || currentKeyword === \"TX:\")\n    ) {\n      // Add spacing for RM and TX, but stop after the first empty line or special line\n      if (trimmedLine.startsWith(\"*\") || trimmedLine === \"\") {\n        addSpacing = false;\n        formattedLines.push(trimmedLine); // No additional spacing\n      } else {\n        formattedLines.push(\"       \" + trimmedLine); // 7 spaces for RM and TX\n      }\n    } else if (addSpacing && currentKeyword === \"IN:\") {\n      // Add spacing for IN, but stop after the first empty line or special line\n      if (trimmedLine.startsWith(\"*\") || trimmedLine === \"\") {\n        addSpacing = false;\n        formattedLines.push(trimmedLine); // No additional spacing\n      } else {\n        formattedLines.push(\"     \" + trimmedLine); // 5 spaces for IN\n      }\n    } else {\n      formattedLines.push(trimmedLine); // Default line\n    }\n  }\n\n  // Join the formatted lines back together\n  let formattedString = formattedLines.join(\"\\n\");\n\n  // Trim extra newlines after RM and IN sections\n  formattedString = formattedString.replace(/(\\n{2,})/g, \"\\n\");\n\n  // Ensure a single line break after the TX section but before any spec or following content\n  formattedString = formattedString.replace(\n    /(TX:[^\\n]*\\n(?:\\s+.*\\n)*)/g,\n    \"$1\\n\"\n  );\n\n  // Remove unnecessary trailing newlines or spaces, but keep the required one after TX:\n  formattedString = formattedString.trimEnd();\n\n  return formattedString;\n}\n\n\n  const handleDrop = (\n    event,\n    setParsedData,\n    setIsJsonUploaded,\n    setErrorMessage,\n    setJobNumber\n  ) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file && file.type === \"application/json\") {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const jsonString = e.target.result;\n          const json = JSON.parse(jsonString);\n          const jobNumber = json.name || \"Default Job Name\";\n          setJobNumber(jobNumber);\n\n          const isNodeStructure = !!json.nodes;\n          const isConnectionStructure = !!json.connections;\n\n          const data = [];\n          const errors = [];\n\n          if (isNodeStructure) {\n            const nodes = json.nodes;\n            Object.keys(nodes).forEach((nodeId) => {\n              const node = nodes[nodeId];\n              const attributes = node.attributes;\n\n              try {\n                const nodeType =\n                  attributes?.node_type?.[\"-Imported\"] ||\n                  attributes?.node_type?.[\"multi_added\"] ||\n                  attributes?.node_type?.[\"button_added\"] ||\n                  Object.values(attributes.node_type)[0] ||\n                  \"N/A\";\n\n                if (nodeType !== \"pole\") return;\n                const poleOwner =\n                  Object.values(attributes.pole_owner)[0] ||\n                  attributes?.pole_owner?.[\"-Imported\"] ||\n                  \"N/A\";\n\n                const poleCount =\n                  attributes?.pole_count?.[\"-Imported\"] ||\n                  Object.values(attributes.pole_count)[0] ||\n                  \"error with data\";\n                const poleTag =\n                  attributes?.pole_tag?.[\"-Imported\"]?.tagtext ||\n                  Object.values(attributes.pole_tag)[0]?.tagtext ||\n                  \"N/A\";\n                const constructionNotes =\n                  Object.values(attributes?.construction_notes || {})\n                    .filter((note) => note.attacher === \"Alabama Power\")\n                    .map((note) => note.note)\n                    .join(\", \") || \"NO APC WORK\";\n\n                const constructionNotesFormatted =\n                  formattedConstructionNotes(constructionNotes);\n\n                const proposedPoleSpec =\n                  attributes?.proposed_pole_spec?.[\"button_added\"] ||\n                  attributes?.proposed_pole_spec?.[\"-Imported\"] ||\n                  \"N/A\";\n                // const proposedPoleSize =\n                // proposedPoleSpec.trim().split(\" \")[0].replace(\"-\", \"/\") || \"N/A\";\n\n                const poleLatLong =\n                  node?.latitude + \", \" + node.longitude ||\n                  Object.values(node?.latitude)[0] +\n                    \", \" +\n                    Object.values(node.longitude)[0] ||\n                  \"N/A\";\n\n                const keyword = \"NESC\";\n                const poleJuCompanies =\n                  Object.values(attributes?.construction_notes || {})\n                    .filter((note) =>\n                      note.note?.toLowerCase().includes(keyword.toLowerCase())\n                    )\n                    .map((note) =>\n                      note.attacher === \"\"\n                        ? \"Missing JU transfer company\"\n                        : note.attacher\n                    )\n                    .filter((company) => company) || \"N/A\";\n\n                //   const njunsData =\n                //  \"RPL \" + poleCount + \" station \" + poleTag + \" \" + poleLatLong + \" \" + proposedPoleSize +\n                //    \"county \" + \"cross street \" + \"city\" + \" \" + poleJuCompanies + \" \" + poleOwner;\n\n                // console.log(njunsData);\n                data.push({\n                  id: nodeId,\n                  type: nodeType,\n                  poleOwner,\n                  poleCount,\n                  poleTag,\n                  constructionNotes,\n                  proposedPoleSpec,\n                  poleLatLong,\n                  poleJuCompanies,\n                  constructionNotesFormatted,\n                  // njunsData\n                });\n              } catch (error) {\n                errors.push(`Issue with attributes for node ID: ${nodeId}`);\n                console.error(`Error processing node ID ${nodeId}:`, error);\n              }\n            });\n          } else if (isConnectionStructure) {\n            const connections = json.connections;\n            Object.keys(connections).forEach((connectionId) => {\n              const connection = connections[connectionId];\n              const attributes = connection.attributes;\n\n              try {\n                const connectionType =\n                  attributes?.connection_type?.[\"button_added\"] || \"N/A\";\n\n                if (connectionType !== \"aerial cable\") return;\n\n                const poleCount =\n                  attributes?.pole_count?.[\"-Imported\"] ||\n                  Object.values(attributes.pole_count)[0] ||\n                  \"error with data\";\n                const poleTag =\n                  attributes?.pole_tag?.[\"-Imported\"]?.tagtext || \"N/A\";\n                const constructionNotes =\n                  Object.values(attributes?.construction_notes || {})\n                    .filter((note) => note.attacher === \"Alabama Power\")\n                    .map((note) => note.note)\n                    .join(\", \") || \"N/A\";\n\n                data.push({\n                  id: connectionId,\n                  type: connectionType,\n                  poleCount,\n                  poleTag,\n                  constructionNotes,\n                });\n              } catch (error) {\n                errors.push(\n                  `Issue with attributes for connection ID: ${connectionId}`\n                );\n                console.error(\n                  `Error processing connection ID ${connectionId}:`,\n                  error\n                );\n              }\n            });\n          } else {\n            setErrorMessage(\"Unrecognized JSON structure\");\n          }\n\n          // Sort the data by pole count, including handling decimal values\n          data.sort((a, b) => {\n            const poleCountA = parseFloat(a.poleCount) || 0;\n            const poleCountB = parseFloat(b.poleCount) || 0;\n            return poleCountA - poleCountB;\n          });\n\n          setParsedData(data);\n          setErrorMessage(errors.join(\" | \"));\n          setIsJsonUploaded(true);\n        } catch (error) {\n          console.error(\"Error parsing JSON\", error);\n          setErrorMessage(\"Error parsing JSON file.\");\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const handleCopy = (text, index) => {\n    const capitalizedText = text.toUpperCase();\n    navigator.clipboard.writeText(capitalizedText);\n    setCopiedIndex(index); // Set the index of the copied button\n\n    // Reset the copied text after 1.5 seconds\n    setTimeout(() => {\n      setCopiedIndex(null);\n    }, 1500);\n  };\n\n  return (\n    <div\n      className={`min-h-screen flex flex-col ${\n        darkMode ? \"bg-custom-gray text-white\" : \"bg-gray-100 text-gray-900\"\n      }`}\n    >\n      {/* Header */}\n      <header\n        className={`py-4 px-8 shadow-md flex justify-between items-center ${\n          darkMode ? \"bg-custom-gray\" : \"bg-blue-600 text-white\"\n        }`}\n      >\n        <div>\n          <h1 className=\"text-xl font-semibold\">MMU JSON Parser</h1>\n          <span className=\"font-semibold text-xs\">by Chris Stewart</span>\n        </div>\n        <div className=\"flex items-center\">\n          {jobNumber && (\n            <h2 className=\"text-lg mt-2 mr-6\">Job Number: {jobNumber}</h2>\n          )}\n          <button\n            onClick={handleToggleDarkMode}\n            className={`py-2 px-4 rounded ${\n              darkMode ? \"bg-gray-700\" : \"bg-gray-200 text-gray-900\"\n            } focus:outline-none`}\n          >\n            <FontAwesomeIcon icon={darkMode ? faSun : faMoon} />\n          </button>\n        </div>\n      </header>\n\n      <main\n        className={`flex-grow p-8 ${\n          darkMode ? \"bg-custom-dark\" : \"bg-gray-100\"\n        }`}\n      >\n        {errorMessage && (\n          <div\n            className={`mb-4 p-4 border rounded ${\n              darkMode\n                ? \"bg-gray-700 border-gray-600 text-red-300\"\n                : \"bg-red-100 text-red-700 border-red-400\"\n            }`}\n          >\n            {errorMessage}\n          </div>\n        )}\n\n        {isJsonUploaded ? (\n          <div className={`${darkMode ? \"text-gray-50\" : \"text-gray-800\"}`}>\n            <h3 className=\"text-lg font-semibold mb-4\">Job Data:</h3>\n            {isJsonUploaded && (\n              <button\n                onClick={handleToggleHideNoWork}\n                className={`mb-4 py-2 px-4 rounded ${\n                  darkMode ? \"bg-gray-700\" : \"bg-gray-200 text-gray-900\"\n                } focus:outline-none`}\n              >\n                {hideNoWork\n                  ? \"Show No Work Locations\"\n                  : \"Hide No Work Locations\"}\n              </button>\n            )}\n\n            <div\n              className={`rounded p-4 ${\n                darkMode ? \"bg-custom-dark\" : \"bg-white border border-gray-300\"\n              }`}\n            >\n              <div className=\"grid gap-4\">\n                {parsedData\n                  .filter(\n                    (item) =>\n                      !hideNoWork || item.constructionNotes !== \"NO APC WORK\"\n                  )\n                  .map((item, index) => (\n                    <div\n                      key={index}\n                      className={`p-2 rounded ${\n                        darkMode\n                          ? \"bg-custom-light\"\n                          : \"bg-gray-50 border-b border-gray-200\"\n                      }`}\n                    >\n                      <div\n                        className={`p-2 rounded ${\n                          darkMode\n                            ? \"bg-custom-light\"\n                            : \"bg-gray-50 border-b border-gray-200\"\n                        } grid grid-cols-9 gap-4`}\n                      >\n                        <p className=\"col-span-2\">\n                          <strong>Loc Number:</strong> {item.poleCount}\n                        </p>\n                        <p className=\"col-span-2\">\n                          <strong>Pole Tag:</strong> {item.poleTag}\n                        </p>\n                        <p className=\"col-span-3\">\n                          <strong>APC Directive:</strong> <br></br>\n                          {item.constructionNotes\n                            .split(\"\\n\")\n                            .map((line, lineIndex) => (\n                              <React.Fragment key={lineIndex}>\n                                {line}\n                                <br />\n                              </React.Fragment>\n                            ))}\n                        </p>\n                        <div className=\"col-span-2 flex flex-col items-center\">\n                          <p>\n                            <strong>Callouts:</strong>\n                          </p>\n                        <button\n                          onClick={() =>\n                            handleCopy(\n                              \"LOC \" +\n                              item.poleCount +\n                              \": POLE TAG# \" +\n                              item.poleTag +\n                              \"\\n \\n\" +\n                              item.constructionNotesFormatted,\n                              index\n                            )\n                          }\n                          className={`py-2 my-auto px-12 rounded bg-slate-500 text-white hover:bg-slate-700 focus:outline-none`}\n                          >\n                          {copiedIndex === index ? \"Copied!\" : \"Copy\"}\n                        </button>\n                          </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div\n            onDragOver={(e) => e.preventDefault()}\n            onDrop={(e) =>\n              handleDrop(\n                e,\n                setParsedData,\n                setIsJsonUploaded,\n                setErrorMessage,\n                setJobNumber\n              )\n            }\n            className={`w-full h-48 border-4 border-dashed ${\n              darkMode\n                ? \"border-gray-700 bg-custom-light\"\n                : \"border-gray-950 bg-white\"\n            } flex items-center justify-center text-center cursor-pointer hover:border-gray-500 transition duration-300`}\n          >\n            Drop your JSON file here\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}