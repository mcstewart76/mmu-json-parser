{"ast":null,"code":"var _jsxFileName = \"/Users/beastio/Documents/Current Projects/mmu-json-parser/mmu-json-parser/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Function to handle JSON file drop\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleDrop = (event, setParsedData, setIsJsonUploaded) => {\n  event.preventDefault();\n  const file = event.dataTransfer.files[0];\n  if (file && file.type === \"application/json\") {\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const json = JSON.parse(e.target.result);\n\n        // Parsing the specific data you need\n        const connections = json.connections;\n        const data = Object.keys(connections).map(key => {\n          const connection = connections[key];\n          const connectionType = connection.attributes.connection_type.button_added;\n          const node1 = connection.node_id_1;\n          const node2 = connection.node_id_2;\n          const section = connection.sections.midpoint_section;\n          const latitude = section.latitude;\n          const longitude = section.longitude;\n          return {\n            connectionType,\n            node1,\n            node2,\n            latitude,\n            longitude\n          };\n        });\n        setParsedData(data);\n        setIsJsonUploaded(true);\n      } catch (error) {\n        console.error(\"Error parsing JSON\", error);\n      }\n    };\n    reader.readAsText(file);\n  }\n};\nfunction App() {\n  _s();\n  const [parsedData, setParsedData] = useState([]);\n  const [isJsonUploaded, setIsJsonUploaded] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-blue-600 text-white py-4 px-8 shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-semibold\",\n        children: \"MMU JSON Parser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-grow p-8 bg-gray-100\",\n      children: isJsonUploaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Parsed Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-auto max-h-64 border border-gray-300 rounded p-4 bg-white\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-4\",\n            children: parsedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 border-b border-gray-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this), \" \", item.connectionType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Nodes:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this), \" \", item.node1, \" \\u2194 \", item.node2]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Location:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 23\n                }, this), \" (\", item.latitude, \",\", \" \", item.longitude, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragOver: e => e.preventDefault(),\n        onDrop: e => handleDrop(e, setParsedData, setIsJsonUploaded),\n        className: \"w-full h-48 border-4 border-dashed border-gray-300 flex items-center justify-center bg-white text-center cursor-pointer hover:border-gray-500 transition duration-300\",\n        children: \"Drop your JSON file here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p4SGSnlsopqlaZtRb0UEaiRdLd8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","handleDrop","event","setParsedData","setIsJsonUploaded","preventDefault","file","dataTransfer","files","type","reader","FileReader","onload","e","json","JSON","parse","target","result","connections","data","Object","keys","map","key","connection","connectionType","attributes","connection_type","button_added","node1","node_id_1","node2","node_id_2","section","sections","midpoint_section","latitude","longitude","error","console","readAsText","App","_s","parsedData","isJsonUploaded","className","children","fileName","_jsxFileName","lineNumber","columnNumber","item","index","onDragOver","onDrop","_c","$RefreshReg$"],"sources":["/Users/beastio/Documents/Current Projects/mmu-json-parser/mmu-json-parser/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n// Function to handle JSON file drop\nconst handleDrop = (event, setParsedData, setIsJsonUploaded) => {\n  event.preventDefault();\n  const file = event.dataTransfer.files[0];\n  if (file && file.type === \"application/json\") {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const json = JSON.parse(e.target.result);\n\n        // Parsing the specific data you need\n        const connections = json.connections;\n        const data = Object.keys(connections).map((key) => {\n          const connection = connections[key];\n          const connectionType =\n            connection.attributes.connection_type.button_added;\n          const node1 = connection.node_id_1;\n          const node2 = connection.node_id_2;\n          const section = connection.sections.midpoint_section;\n          const latitude = section.latitude;\n          const longitude = section.longitude;\n\n          return {\n            connectionType,\n            node1,\n            node2,\n            latitude,\n            longitude,\n          };\n        });\n\n        setParsedData(data);\n        setIsJsonUploaded(true);\n      } catch (error) {\n        console.error(\"Error parsing JSON\", error);\n      }\n    };\n    reader.readAsText(file);\n  }\n};\n\nfunction App() {\n  const [parsedData, setParsedData] = useState([]);\n  const [isJsonUploaded, setIsJsonUploaded] = useState(false);\n\n  return (\n    <div className=\"h-screen flex flex-col\">\n      {/* Header */}\n      <header className=\"bg-blue-600 text-white py-4 px-8 shadow-md\">\n        <h1 className=\"text-xl font-semibold\">MMU JSON Parser</h1>\n      </header>\n\n      <main className=\"flex-grow p-8 bg-gray-100\">\n        {isJsonUploaded ? (\n          <div className=\"text-gray-800\">\n            <h3 className=\"text-lg font-semibold mb-4\">Parsed Data:</h3>\n            <div className=\"overflow-auto max-h-64 border border-gray-300 rounded p-4 bg-white\">\n              <div className=\"grid grid-cols-3 gap-4\">\n                {parsedData.map((item, index) => (\n                  <div key={index} className=\"p-2 border-b border-gray-200\">\n                    <p>\n                      <strong>Type:</strong> {item.connectionType}\n                    </p>\n                    <p>\n                      <strong>Nodes:</strong> {item.node1} â†” {item.node2}\n                    </p>\n                    <p>\n                      <strong>Location:</strong> ({item.latitude},{\" \"}\n                      {item.longitude})\n                    </p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div\n            onDragOver={(e) => e.preventDefault()}\n            onDrop={(e) => handleDrop(e, setParsedData, setIsJsonUploaded)}\n            className=\"w-full h-48 border-4 border-dashed border-gray-300 flex items-center justify-center bg-white text-center cursor-pointer hover:border-gray-500 transition duration-300\"\n          >\n            Drop your JSON file here\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}