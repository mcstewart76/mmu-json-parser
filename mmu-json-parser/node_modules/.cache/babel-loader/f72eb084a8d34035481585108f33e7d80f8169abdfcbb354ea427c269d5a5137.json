{"ast":null,"code":"var _jsxFileName = \"/Users/beastio/Documents/Current Projects/mmu-json-parser/mmu-json-parser/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [parsedData, setParsedData] = useState([]);\n  const [isJsonUploaded, setIsJsonUploaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [jobNumber, setJobNumber] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n  const handleToggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  const handleDrop = (event, setParsedData, setIsJsonUploaded, setErrorMessage, setJobNumber) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file && file.type === \"application/json\") {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const jsonString = e.target.result;\n          const json = JSON.parse(jsonString);\n          const jobNumber = json.name || \"Default Job Name\";\n          setJobNumber(jobNumber);\n          const isNodeStructure = !!json.nodes;\n          const isConnectionStructure = !!json.connections;\n          const data = [];\n          const errors = [];\n          if (isNodeStructure) {\n            const nodes = json.nodes;\n            Object.keys(nodes).forEach(nodeId => {\n              const node = nodes[nodeId];\n              const attributes = node.attributes;\n              try {\n                var _attributes$node_type, _attributes$node_type2, _attributes$node_type3, _attributes$pole_coun, _attributes$pole_tag, _attributes$pole_tag$, _Object$values$;\n                const nodeType = (attributes === null || attributes === void 0 ? void 0 : (_attributes$node_type = attributes.node_type) === null || _attributes$node_type === void 0 ? void 0 : _attributes$node_type[\"-Imported\"]) || (attributes === null || attributes === void 0 ? void 0 : (_attributes$node_type2 = attributes.node_type) === null || _attributes$node_type2 === void 0 ? void 0 : _attributes$node_type2[\"multi_added\"]) || (attributes === null || attributes === void 0 ? void 0 : (_attributes$node_type3 = attributes.node_type) === null || _attributes$node_type3 === void 0 ? void 0 : _attributes$node_type3[\"button_added\"]) || \"N/A\";\n                if (nodeType !== \"pole\") return;\n                const poleCount = (attributes === null || attributes === void 0 ? void 0 : (_attributes$pole_coun = attributes.pole_count) === null || _attributes$pole_coun === void 0 ? void 0 : _attributes$pole_coun[\"-Imported\"]) || Object.values(attributes.pole_count)[0] || \"error with data\";\n                const poleTag = (attributes === null || attributes === void 0 ? void 0 : (_attributes$pole_tag = attributes.pole_tag) === null || _attributes$pole_tag === void 0 ? void 0 : (_attributes$pole_tag$ = _attributes$pole_tag[\"-Imported\"]) === null || _attributes$pole_tag$ === void 0 ? void 0 : _attributes$pole_tag$.tagtext) || ((_Object$values$ = Object.values(attributes.pole_tag)[0]) === null || _Object$values$ === void 0 ? void 0 : _Object$values$.tagtext) || \"N/A\";\n                const constructionNotes = Object.values((attributes === null || attributes === void 0 ? void 0 : attributes.construction_notes) || {}).filter(note => note.attacher === \"Alabama Power\").map(note => note.note).join(\", \") || \"NO APC WORK\";\n                data.push({\n                  id: nodeId,\n                  type: nodeType,\n                  poleCount,\n                  poleTag,\n                  constructionNotes\n                });\n              } catch (error) {\n                errors.push(`Issue with attributes for node ID: ${nodeId}`);\n                console.error(`Error processing node ID ${nodeId}:`, error);\n              }\n            });\n          } else if (isConnectionStructure) {\n            const connections = json.connections;\n            Object.keys(connections).forEach(connectionId => {\n              const connection = connections[connectionId];\n              const attributes = connection.attributes;\n              try {\n                var _attributes$connectio, _attributes$pole_coun2, _attributes$pole_tag2, _attributes$pole_tag3;\n                const connectionType = (attributes === null || attributes === void 0 ? void 0 : (_attributes$connectio = attributes.connection_type) === null || _attributes$connectio === void 0 ? void 0 : _attributes$connectio[\"button_added\"]) || \"N/A\";\n                if (connectionType !== \"aerial cable\") return;\n                const poleCount = (attributes === null || attributes === void 0 ? void 0 : (_attributes$pole_coun2 = attributes.pole_count) === null || _attributes$pole_coun2 === void 0 ? void 0 : _attributes$pole_coun2[\"-Imported\"]) || Object.values(attributes.pole_count)[0] || \"error with data\";\n                const poleTag = (attributes === null || attributes === void 0 ? void 0 : (_attributes$pole_tag2 = attributes.pole_tag) === null || _attributes$pole_tag2 === void 0 ? void 0 : (_attributes$pole_tag3 = _attributes$pole_tag2[\"-Imported\"]) === null || _attributes$pole_tag3 === void 0 ? void 0 : _attributes$pole_tag3.tagtext) || \"N/A\";\n                const constructionNotes = Object.values((attributes === null || attributes === void 0 ? void 0 : attributes.construction_notes) || {}).filter(note => note.attacher === \"Alabama Power\").map(note => note.note).join(\", \") || \"N/A\";\n                data.push({\n                  id: connectionId,\n                  type: connectionType,\n                  poleCount,\n                  poleTag,\n                  constructionNotes\n                });\n              } catch (error) {\n                errors.push(`Issue with attributes for connection ID: ${connectionId}`);\n                console.error(`Error processing connection ID ${connectionId}:`, error);\n              }\n            });\n          } else {\n            setErrorMessage(\"Unrecognized JSON structure\");\n          }\n\n          // Sort the data by pole count, including handling decimal values\n          data.sort((a, b) => {\n            const poleCountA = parseFloat(a.poleCount) || 0;\n            const poleCountB = parseFloat(b.poleCount) || 0;\n            return poleCountA - poleCountB;\n          });\n          setParsedData(data);\n          setErrorMessage(errors.join(\" | \"));\n          setIsJsonUploaded(true);\n        } catch (error) {\n          console.error(\"Error parsing JSON\", error);\n          setErrorMessage(\"Error parsing JSON file.\");\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    alert(\"Copied to clipboard!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `min-h-screen flex flex-col ${darkMode ? \"bg-custom-gray text-white\" : \"bg-gray-100 text-gray-900\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: `py-4 px-8 shadow-md flex justify-between items-center ${darkMode ? \"bg-custom-gray\" : \"bg-blue-600 text-white\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-semibold\",\n        children: \"MMU JSON Parser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [jobNumber && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mt-2 mr-6\",\n          children: [\"Job Number: \", jobNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleDarkMode,\n          className: `py-2 px-4 rounded ${darkMode ? \"bg-gray-700\" : \"bg-gray-200 text-gray-900\"} focus:outline-none`,\n          children: darkMode ? \"Light Mode\" : \"Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `flex-grow p-8 ${darkMode ? \"bg-custom-dark\" : \"bg-gray-100\"}`,\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 p-4 border rounded ${darkMode ? \"bg-gray-700 border-gray-600 text-red-300\" : \"bg-red-100 text-red-700 border-red-400\"}`,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), isJsonUploaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${darkMode ? \"text-gray-50\" : \"text-gray-800\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Job Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rounded p-4 ${darkMode ? \"bg-custom-dark\" : \"bg-white border border-gray-300\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-2 rounded ${darkMode ? \"bg-custom-light\" : \"bg-gray-50 border-b border-gray-200\"} grid grid-cols-7 gap-4`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"OCR:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), parsedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-2 rounded ${darkMode ? \"bg-custom-light\" : \"bg-gray-50 border-b border-gray-200\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `p-2 rounded ${darkMode ? \"bg-custom-light\" : \"bg-gray-50 border-b border-gray-200\"} grid grid-cols-7 gap-4`,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"col-span-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Pole Count:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 25\n                  }, this), \" \", item.poleCount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"col-span-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Pole Tag:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 25\n                  }, this), \" \", item.poleTag]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"col-span-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Construction Notes:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 25\n                  }, this), \" \", item.constructionNotes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleCopy(item.constructionNotes),\n                  className: \"col-span-1 py-2 rounded bg-blue-500 text-white hover:bg-blue-700 focus:outline-none\",\n                  children: \"Copy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragOver: e => e.preventDefault(),\n        onDrop: e => handleDrop(e, setParsedData, setIsJsonUploaded, setErrorMessage, setJobNumber),\n        className: `w-full h-48 border-4 border-dashed ${darkMode ? \"border-gray-700 bg-custom-light\" : \"border-gray-950\"} flex items-center justify-center bg-white text-center cursor-pointer hover:border-gray-500 transition duration-300`,\n        children: \"Drop your JSON file here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0ZYyILy6X2jjuGKIG35zHAJf/g0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","parsedData","setParsedData","isJsonUploaded","setIsJsonUploaded","errorMessage","setErrorMessage","jobNumber","setJobNumber","darkMode","setDarkMode","handleToggleDarkMode","handleDrop","event","preventDefault","file","dataTransfer","files","type","reader","FileReader","onload","e","jsonString","target","result","json","JSON","parse","name","isNodeStructure","nodes","isConnectionStructure","connections","data","errors","Object","keys","forEach","nodeId","node","attributes","_attributes$node_type","_attributes$node_type2","_attributes$node_type3","_attributes$pole_coun","_attributes$pole_tag","_attributes$pole_tag$","_Object$values$","nodeType","node_type","poleCount","pole_count","values","poleTag","pole_tag","tagtext","constructionNotes","construction_notes","filter","note","attacher","map","join","push","id","error","console","connectionId","connection","_attributes$connectio","_attributes$pole_coun2","_attributes$pole_tag2","_attributes$pole_tag3","connectionType","connection_type","sort","a","b","poleCountA","parseFloat","poleCountB","readAsText","handleCopy","text","navigator","clipboard","writeText","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","item","index","onDragOver","onDrop","_c","$RefreshReg$"],"sources":["/Users/beastio/Documents/Current Projects/mmu-json-parser/mmu-json-parser/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [parsedData, setParsedData] = useState([]);\n  const [isJsonUploaded, setIsJsonUploaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [jobNumber, setJobNumber] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n\n  const handleToggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  const handleDrop = (\n    event,\n    setParsedData,\n    setIsJsonUploaded,\n    setErrorMessage,\n    setJobNumber\n  ) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file && file.type === \"application/json\") {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const jsonString = e.target.result;\n          const json = JSON.parse(jsonString);\n          const jobNumber = json.name || \"Default Job Name\";\n          setJobNumber(jobNumber);\n\n          const isNodeStructure = !!json.nodes;\n          const isConnectionStructure = !!json.connections;\n\n          const data = [];\n          const errors = [];\n\n          if (isNodeStructure) {\n            const nodes = json.nodes;\n            Object.keys(nodes).forEach((nodeId) => {\n              const node = nodes[nodeId];\n              const attributes = node.attributes;\n\n              try {\n                const nodeType =\n                  attributes?.node_type?.[\"-Imported\"] ||\n                  attributes?.node_type?.[\"multi_added\"] ||\n                  attributes?.node_type?.[\"button_added\"] ||\n                  \"N/A\";\n\n                if (nodeType !== \"pole\") return;\n\n                const poleCount =\n                  attributes?.pole_count?.[\"-Imported\"] ||\n                  Object.values(attributes.pole_count)[0] ||\n                  \"error with data\";\n                const poleTag =\n                  attributes?.pole_tag?.[\"-Imported\"]?.tagtext ||\n                  Object.values(attributes.pole_tag)[0]?.tagtext ||\n                  \"N/A\";\n                const constructionNotes =\n                  Object.values(attributes?.construction_notes || {})\n                    .filter((note) => note.attacher === \"Alabama Power\")\n                    .map((note) => note.note)\n                    .join(\", \") || \"NO APC WORK\";\n\n                data.push({\n                  id: nodeId,\n                  type: nodeType,\n                  poleCount,\n                  poleTag,\n                  constructionNotes,\n                });\n              } catch (error) {\n                errors.push(`Issue with attributes for node ID: ${nodeId}`);\n                console.error(`Error processing node ID ${nodeId}:`, error);\n              }\n            });\n          } else if (isConnectionStructure) {\n            const connections = json.connections;\n            Object.keys(connections).forEach((connectionId) => {\n              const connection = connections[connectionId];\n              const attributes = connection.attributes;\n\n              try {\n                const connectionType =\n                  attributes?.connection_type?.[\"button_added\"] || \"N/A\";\n\n                if (connectionType !== \"aerial cable\") return;\n\n                const poleCount =\n                  attributes?.pole_count?.[\"-Imported\"] ||\n                  Object.values(attributes.pole_count)[0] ||\n                  \"error with data\";\n                const poleTag =\n                  attributes?.pole_tag?.[\"-Imported\"]?.tagtext || \"N/A\";\n                const constructionNotes =\n                  Object.values(attributes?.construction_notes || {})\n                    .filter((note) => note.attacher === \"Alabama Power\")\n                    .map((note) => note.note)\n                    .join(\", \") || \"N/A\";\n\n                data.push({\n                  id: connectionId,\n                  type: connectionType,\n                  poleCount,\n                  poleTag,\n                  constructionNotes,\n                });\n              } catch (error) {\n                errors.push(\n                  `Issue with attributes for connection ID: ${connectionId}`\n                );\n                console.error(\n                  `Error processing connection ID ${connectionId}:`,\n                  error\n                );\n              }\n            });\n          } else {\n            setErrorMessage(\"Unrecognized JSON structure\");\n          }\n\n          // Sort the data by pole count, including handling decimal values\n          data.sort((a, b) => {\n            const poleCountA = parseFloat(a.poleCount) || 0;\n            const poleCountB = parseFloat(b.poleCount) || 0;\n            return poleCountA - poleCountB;\n          });\n\n          setParsedData(data);\n          setErrorMessage(errors.join(\" | \"));\n          setIsJsonUploaded(true);\n        } catch (error) {\n          console.error(\"Error parsing JSON\", error);\n          setErrorMessage(\"Error parsing JSON file.\");\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text);\n    alert(\"Copied to clipboard!\");\n  };\n\n  return (\n    <div\n      className={`min-h-screen flex flex-col ${\n        darkMode ? \"bg-custom-gray text-white\" : \"bg-gray-100 text-gray-900\"\n      }`}\n    >\n      {/* Header */}\n      <header\n        className={`py-4 px-8 shadow-md flex justify-between items-center ${\n          darkMode ? \"bg-custom-gray\" : \"bg-blue-600 text-white\"\n        }`}\n      >\n        <h1 className=\"text-xl font-semibold\">MMU JSON Parser</h1>\n        <div className=\"flex items-center\">\n          {jobNumber && (\n            <h2 className=\"text-lg mt-2 mr-6\">Job Number: {jobNumber}</h2>\n          )}\n          <button\n            onClick={handleToggleDarkMode}\n            className={`py-2 px-4 rounded ${\n              darkMode ? \"bg-gray-700\" : \"bg-gray-200 text-gray-900\"\n            } focus:outline-none`}\n          >\n            {darkMode ? \"Light Mode\" : \"Dark Mode\"}\n          </button>\n        </div>\n      </header>\n\n      <main\n        className={`flex-grow p-8 ${\n          darkMode ? \"bg-custom-dark\" : \"bg-gray-100\"\n        }`}\n      >\n        {errorMessage && (\n          <div\n            className={`mb-4 p-4 border rounded ${\n              darkMode\n                ? \"bg-gray-700 border-gray-600 text-red-300\"\n                : \"bg-red-100 text-red-700 border-red-400\"\n            }`}\n          >\n            {errorMessage}\n          </div>\n        )}\n\n        {isJsonUploaded ? (\n          <div className={`${darkMode ? \"text-gray-50\" : \"text-gray-800\"}`}>\n            <h3 className=\"text-lg font-semibold mb-4\">Job Data:</h3>\n            <div\n              className={`rounded p-4 ${\n                darkMode ? \"bg-custom-dark\" : \"bg-white border border-gray-300\"\n              }`}\n            >\n              <div className=\"grid gap-4\">\n                <div\n                  className={`p-2 rounded ${\n                    darkMode\n                      ? \"bg-custom-light\"\n                      : \"bg-gray-50 border-b border-gray-200\"\n                  } grid grid-cols-7 gap-4`}\n                >\n                  <p>OCR:</p>\n                  \n                </div>\n\n                {parsedData.map((item, index) => (\n                  <div\n                    key={index}\n                    className={`p-2 rounded ${\n                      darkMode\n                        ? \"bg-custom-light\"\n                        : \"bg-gray-50 border-b border-gray-200\"\n                    }`}\n                  >\n                    <div\n                      className={`p-2 rounded ${\n                        darkMode\n                          ? \"bg-custom-light\"\n                          : \"bg-gray-50 border-b border-gray-200\"\n                      } grid grid-cols-7 gap-4`}\n                    >\n                      <p className=\"col-span-2\">\n                        <strong>Pole Count:</strong> {item.poleCount}\n                      </p>\n                      <p className=\"col-span-2\">\n                        <strong>Pole Tag:</strong> {item.poleTag}\n                      </p>\n                      <p className=\"col-span-3\">\n                        <strong>Construction Notes:</strong>{\" \"}\n                        {item.constructionNotes}\n                      </p>\n                      <button\n                        onClick={() => handleCopy(item.constructionNotes)}\n                        className=\"col-span-1 py-2 rounded bg-blue-500 text-white hover:bg-blue-700 focus:outline-none\"\n                      >\n                        Copy\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div\n            onDragOver={(e) => e.preventDefault()}\n            onDrop={(e) =>\n              handleDrop(\n                e,\n                setParsedData,\n                setIsJsonUploaded,\n                setErrorMessage,\n                setJobNumber\n              )\n            }\n            className={`w-full h-48 border-4 border-dashed ${\n              darkMode ? \"border-gray-700 bg-custom-light\" : \"border-gray-950\"\n            } flex items-center justify-center bg-white text-center cursor-pointer hover:border-gray-500 transition duration-300`}\n          >\n            Drop your JSON file here\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}